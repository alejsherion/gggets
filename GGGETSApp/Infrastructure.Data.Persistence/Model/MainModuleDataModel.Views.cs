





//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets3E085B03314FCF77CDE30555CDD8ED0C12C368E000CC1A47AEBFCA2E1793E4A2))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    [System.Diagnostics.DebuggerNonUserCode()][System.CodeDom.Compiler.GeneratedCode("EF","v 4.0")]public sealed class ViewsForBaseEntitySets3E085B03314FCF77CDE30555CDD8ED0C12C368E000CC1A47AEBFCA2E1793E4A2 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets3E085B03314FCF77CDE30555CDD8ED0C12C368E000CC1A47AEBFCA2E1793E4A2()
        {
            this.EdmEntityContainerName = "MainModuleUnitOfWork";
            this.StoreEntityContainerName = "NLayerAppModelStoreContainer";
            this.HashOverMappingClosure = "cf32f259e91b79f98f1bf641bcd2a621be4d8cd62c0e0744fb3e37229c4aa486";
            this.HashOverAllExtentViews = "447debc881b3baceff17aff8340ef4a1517d48b6f110b171e033510d72d98327";
            this.ViewCount = 17;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for NLayerAppModelStoreContainer.BankAccount
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NLayerAppModelStoreContainer.BankAccount", @"
    SELECT VALUE -- Constructing BankAccount
        [NLayerAppModel.Store.BankAccount](T1.BankAccount_BankAccountId, T1.BankAccount_BankAccountNumber, T1.BankAccount_Balance, T1.BankAccount_CustomerId, T1.BankAccount_Locked)
    FROM (
        SELECT 
            T.BankAccountId AS BankAccount_BankAccountId, 
            T.BankAccountNumber AS BankAccount_BankAccountNumber, 
            T.Balance AS BankAccount_Balance, 
            T.CustomerId AS BankAccount_CustomerId, 
            T.Locked AS BankAccount_Locked, 
            True AS _from0
        FROM MainModuleUnitOfWork.BankAccounts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NLayerAppModelStoreContainer.BankTransfers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NLayerAppModelStoreContainer.BankTransfers", @"
    SELECT VALUE -- Constructing BankTransfers
        [NLayerAppModel.Store.BankTransfers](T1.BankTransfers_BankTransferId, T1.BankTransfers_FromBankAccountId, T1.BankTransfers_ToBankAccountId, T1.BankTransfers_Amount, T1.BankTransfers_TransferDate)
    FROM (
        SELECT 
            T.BankTransferId AS BankTransfers_BankTransferId, 
            T.FromBankAccountId AS BankTransfers_FromBankAccountId, 
            T.ToBankAccountId AS BankTransfers_ToBankAccountId, 
            T.Amount AS BankTransfers_Amount, 
            T.TransferDate AS BankTransfers_TransferDate, 
            True AS _from0
        FROM MainModuleUnitOfWork.BankTransfers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NLayerAppModelStoreContainer.Country
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NLayerAppModelStoreContainer.Country", @"
    SELECT VALUE -- Constructing Country
        [NLayerAppModel.Store.Country](T1.Country_CountryId, T1.Country_CountryName)
    FROM (
        SELECT 
            T.CountryId AS Country_CountryId, 
            T.CountryName AS Country_CountryName, 
            True AS _from0
        FROM MainModuleUnitOfWork.Countries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NLayerAppModelStoreContainer.Customer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NLayerAppModelStoreContainer.Customer", "\r\n    SELECT VALUE -- Constructing Customer\r\n        [NLayerAppModel.Store.Custom" +
                    "er](T3.Customer_CustomerId, T3.Customer_CustomerCode, T3.Customer_CompanyName, T" +
                    "3.Customer_ContactName, T3.Customer_ContactTitle, T3.Customer_Address, T3.Custom" +
                    "er_City, T3.Customer_PostalCode, T3.Customer_Telephone, T3.Customer_Fax, T3.Cust" +
                    "omer_CountryId, T3.Customer_Photo, T3.Customer_IsEnabled)\r\n    FROM (\r\n        S" +
                    "ELECT T1.Customer_CustomerId, T2.Customer_CustomerCode, T2.Customer_CompanyName," +
                    " T2.Customer_ContactName, T2.Customer_ContactTitle, T2.Customer_Address, T2.Cust" +
                    "omer_City, T2.Customer_PostalCode, T2.Customer_Telephone, T2.Customer_Fax, T2.Cu" +
                    "stomer_CountryId, T1.Customer_Photo, T2.Customer_IsEnabled, T2._from0, T1._from1" +
                    "\r\n        FROM  (\r\n            SELECT \r\n                T.CustomerId AS Customer" +
                    "_CustomerId, \r\n                T.Photo AS Customer_Photo, \r\n                True" +
                    " AS _from1\r\n            FROM MainModuleUnitOfWork.CustomerPictures AS T) AS T1\r\n" +
                    "            INNER JOIN (\r\n            SELECT \r\n                T.CustomerId AS C" +
                    "ustomer_CustomerId, \r\n                T.CustomerCode AS Customer_CustomerCode, \r" +
                    "\n                T.CompanyName AS Customer_CompanyName, \r\n                T.Cont" +
                    "actName AS Customer_ContactName, \r\n                T.ContactTitle AS Customer_Co" +
                    "ntactTitle, \r\n                T.Address.Address AS Customer_Address, \r\n         " +
                    "       T.Address.City AS Customer_City, \r\n                T.Address.PostalCode A" +
                    "S Customer_PostalCode, \r\n                T.Address.Telephone AS Customer_Telepho" +
                    "ne, \r\n                T.Address.Fax AS Customer_Fax, \r\n                T.Country" +
                    "Id AS Customer_CountryId, \r\n                T.IsEnabled AS Customer_IsEnabled, \r" +
                    "\n                True AS _from0\r\n            FROM MainModuleUnitOfWork.Customers" +
                    " AS T) AS T2\r\n            ON T1.Customer_CustomerId = T2.Customer_CustomerId\r\n  " +
                    "  ) AS T3");
        }
        
        /// <Summary>
        /// return view for NLayerAppModelStoreContainer.Order
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NLayerAppModelStoreContainer.Order", @"
    SELECT VALUE -- Constructing Order
        [NLayerAppModel.Store.Order](T1.Order_OrderId, T1.Order_CustomerId, T1.Order_OrderDate, T1.Order_DeliveryDate, T1.Order_ShippingName, T1.Order_ShippingAddress, T1.Order_ShippingCity, T1.Order_ShippingZip)
    FROM (
        SELECT 
            T.OrderId AS Order_OrderId, 
            T.CustomerId AS Order_CustomerId, 
            T.OrderDate AS Order_OrderDate, 
            T.DeliveryDate AS Order_DeliveryDate, 
            T.ShippingName AS Order_ShippingName, 
            T.ShippingAddress AS Order_ShippingAddress, 
            T.ShippingCity AS Order_ShippingCity, 
            T.ShippingZip AS Order_ShippingZip, 
            True AS _from0
        FROM MainModuleUnitOfWork.Orders AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NLayerAppModelStoreContainer.OrderDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NLayerAppModelStoreContainer.OrderDetails", @"
    SELECT VALUE -- Constructing OrderDetails
        [NLayerAppModel.Store.OrderDetails](T1.OrderDetails_OrderDetailsId, T1.OrderDetails_OrderId, T1.OrderDetails_ProductId, T1.OrderDetails_UnitPrice, T1.OrderDetails_Amount, T1.OrderDetails_Discount)
    FROM (
        SELECT 
            T.OrderDetailsId AS OrderDetails_OrderDetailsId, 
            T.OrderId AS OrderDetails_OrderId, 
            T.ProductId AS OrderDetails_ProductId, 
            T.UnitPrice AS OrderDetails_UnitPrice, 
            T.Amount AS OrderDetails_Amount, 
            T.Discount AS OrderDetails_Discount, 
            True AS _from0
        FROM MainModuleUnitOfWork.OrderDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NLayerAppModelStoreContainer.Product
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NLayerAppModelStoreContainer.Product", @"
    SELECT VALUE -- Constructing Product
        [NLayerAppModel.Store.Product](T1.Product_ProductId, T1.Product_ProductDescription, T1.Product_UnitPrice, T1.Product_UnitAmount, T1.Product_Publisher, T1.Product_AmountInStock)
    FROM (
        SELECT 
            T.ProductId AS Product_ProductId, 
            T.ProductDescription AS Product_ProductDescription, 
            T.UnitPrice AS Product_UnitPrice, 
            T.UnitAmount AS Product_UnitAmount, 
            T.Publisher AS Product_Publisher, 
            T.AmountInStock AS Product_AmountInStock, 
            True AS _from0
        FROM MainModuleUnitOfWork.Products AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NLayerAppModelStoreContainer.Software
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NLayerAppModelStoreContainer.Software", @"
    SELECT VALUE -- Constructing Software
        [NLayerAppModel.Store.Software](T1.Software_ProductId, T1.Software_LicenseCode)
    FROM (
        SELECT 
            T.ProductId AS Software_ProductId, 
            TREAT(T AS [Microsoft.Samples.NLayerApp.Infrastructure.Data.MainModule.Model.Software]).LicenseCode AS Software_LicenseCode, 
            True AS _from0
        FROM MainModuleUnitOfWork.Products AS T
        WHERE T IS OF (ONLY [Microsoft.Samples.NLayerApp.Infrastructure.Data.MainModule.Model.Software])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for NLayerAppModelStoreContainer.Book
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("NLayerAppModelStoreContainer.Book", @"
    SELECT VALUE -- Constructing Book
        [NLayerAppModel.Store.Book](T1.Book_ProductId, T1.Book_Publisher)
    FROM (
        SELECT 
            T.ProductId AS Book_ProductId, 
            TREAT(T AS [Microsoft.Samples.NLayerApp.Infrastructure.Data.MainModule.Model.Book]).Editor AS Book_Publisher, 
            True AS _from0
        FROM MainModuleUnitOfWork.Products AS T
        WHERE T IS OF (ONLY [Microsoft.Samples.NLayerApp.Infrastructure.Data.MainModule.Model.Book])
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MainModuleUnitOfWork.BankAccounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MainModuleUnitOfWork.BankAccounts", @"
    SELECT VALUE -- Constructing BankAccounts
        [Microsoft.Samples.NLayerApp.Infrastructure.Data.MainModule.Model.BankAccount](T1.BankAccount_BankAccountId, T1.BankAccount_BankAccountNumber, T1.BankAccount_Balance, T1.BankAccount_CustomerId, T1.BankAccount_Locked)
    FROM (
        SELECT 
            T.BankAccountId AS BankAccount_BankAccountId, 
            T.BankAccountNumber AS BankAccount_BankAccountNumber, 
            T.Balance AS BankAccount_Balance, 
            T.CustomerId AS BankAccount_CustomerId, 
            T.Locked AS BankAccount_Locked, 
            True AS _from0
        FROM NLayerAppModelStoreContainer.BankAccount AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MainModuleUnitOfWork.BankTransfers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MainModuleUnitOfWork.BankTransfers", @"
    SELECT VALUE -- Constructing BankTransfers
        [Microsoft.Samples.NLayerApp.Infrastructure.Data.MainModule.Model.BankTransfer](T1.BankTransfer_BankTransferId, T1.BankTransfer_FromBankAccountId, T1.BankTransfer_ToBankAccountId, T1.BankTransfer_Amount, T1.BankTransfer_TransferDate)
    FROM (
        SELECT 
            T.BankTransferId AS BankTransfer_BankTransferId, 
            T.FromBankAccountId AS BankTransfer_FromBankAccountId, 
            T.ToBankAccountId AS BankTransfer_ToBankAccountId, 
            T.Amount AS BankTransfer_Amount, 
            T.TransferDate AS BankTransfer_TransferDate, 
            True AS _from0
        FROM NLayerAppModelStoreContainer.BankTransfers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MainModuleUnitOfWork.Countries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MainModuleUnitOfWork.Countries", @"
    SELECT VALUE -- Constructing Countries
        [Microsoft.Samples.NLayerApp.Infrastructure.Data.MainModule.Model.Country](T1.Country_CountryId, T1.Country_CountryName)
    FROM (
        SELECT 
            T.CountryId AS Country_CountryId, 
            T.CountryName AS Country_CountryName, 
            True AS _from0
        FROM NLayerAppModelStoreContainer.Country AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MainModuleUnitOfWork.Customers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MainModuleUnitOfWork.Customers", "\r\n    SELECT VALUE -- Constructing Customers\r\n        [Microsoft.Samples.NLayerAp" +
                    "p.Infrastructure.Data.MainModule.Model.Customer](T2.Customer_CustomerId, T2.Cust" +
                    "omer_CustomerCode, T2.Customer_CompanyName, T2.Customer_ContactName, T2.Customer" +
                    "_ContactTitle, T2.Customer_CountryId, T2.Customer_Address, T2.Customer_IsEnabled" +
                    ")\r\n    FROM (\r\n        SELECT -- Constructing Address\r\n            [Microsoft.Sa" +
                    "mples.NLayerApp.Infrastructure.Data.MainModule.Model.AddressInformation](T1.Cust" +
                    "omer_Address_Fax, T1.Customer_Address_Telephone, T1.Customer_Address_PostalCode," +
                    " T1.Customer_Address_City, T1.Customer_Address_Address) AS Customer_Address, \r\n " +
                    "           T1.Customer_CustomerId, T1.Customer_CustomerCode, T1.Customer_Company" +
                    "Name, T1.Customer_ContactName, T1.Customer_ContactTitle, T1.Customer_CountryId, " +
                    "T1.Customer_IsEnabled\r\n        FROM (\r\n            SELECT \r\n                T.Cu" +
                    "stomerId AS Customer_CustomerId, \r\n                T.CustomerCode AS Customer_Cu" +
                    "stomerCode, \r\n                T.CompanyName AS Customer_CompanyName, \r\n         " +
                    "       T.ContactName AS Customer_ContactName, \r\n                T.ContactTitle A" +
                    "S Customer_ContactTitle, \r\n                T.CountryId AS Customer_CountryId, \r\n" +
                    "                T.IsEnabled AS Customer_IsEnabled, \r\n                T.Fax AS Cu" +
                    "stomer_Address_Fax, \r\n                T.Telephone AS Customer_Address_Telephone," +
                    " \r\n                T.PostalCode AS Customer_Address_PostalCode, \r\n              " +
                    "  T.City AS Customer_Address_City, \r\n                T.Address AS Customer_Addre" +
                    "ss_Address, \r\n                True AS _from0\r\n            FROM NLayerAppModelSto" +
                    "reContainer.Customer AS T\r\n        ) AS T1\r\n    ) AS T2");
        }
        
        /// <Summary>
        /// return view for MainModuleUnitOfWork.Orders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MainModuleUnitOfWork.Orders", @"
    SELECT VALUE -- Constructing Orders
        [Microsoft.Samples.NLayerApp.Infrastructure.Data.MainModule.Model.Order](T1.Order_OrderId, T1.Order_CustomerId, T1.Order_OrderDate, T1.Order_DeliveryDate, T1.Order_ShippingName, T1.Order_ShippingAddress, T1.Order_ShippingCity, T1.Order_ShippingZip)
    FROM (
        SELECT 
            T.OrderId AS Order_OrderId, 
            T.CustomerId AS Order_CustomerId, 
            T.OrderDate AS Order_OrderDate, 
            T.DeliveryDate AS Order_DeliveryDate, 
            T.ShippingName AS Order_ShippingName, 
            T.ShippingAddress AS Order_ShippingAddress, 
            T.ShippingCity AS Order_ShippingCity, 
            T.ShippingZip AS Order_ShippingZip, 
            True AS _from0
        FROM NLayerAppModelStoreContainer.[Order] AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MainModuleUnitOfWork.OrderDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MainModuleUnitOfWork.OrderDetails", @"
    SELECT VALUE -- Constructing OrderDetails
        [Microsoft.Samples.NLayerApp.Infrastructure.Data.MainModule.Model.OrderDetail](T1.OrderDetail_OrderDetailsId, T1.OrderDetail_OrderId, T1.OrderDetail_ProductId, T1.OrderDetail_UnitPrice, T1.OrderDetail_Amount, T1.OrderDetail_Discount)
    FROM (
        SELECT 
            T.OrderDetailsId AS OrderDetail_OrderDetailsId, 
            T.OrderId AS OrderDetail_OrderId, 
            T.ProductId AS OrderDetail_ProductId, 
            T.UnitPrice AS OrderDetail_UnitPrice, 
            T.Amount AS OrderDetail_Amount, 
            T.Discount AS OrderDetail_Discount, 
            True AS _from0
        FROM NLayerAppModelStoreContainer.OrderDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MainModuleUnitOfWork.Products
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2514);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Products\r\n        CASE\r\n            WHEN (NOT");
            viewString.Append("(T5._from1) AND NOT(T5._from2)) THEN [Microsoft.Samples.NLayerApp.Infrastructure");
            viewString.Append(".Data.MainModule.Model.Product](T5.Product_ProductId, T5.Product_ProductDescript");
            viewString.Append("ion, T5.Product_UnitPrice, T5.Product_UnitAmount, T5.Product_Publisher, T5.Produ");
            viewString.Append("ct_AmountInStock)\r\n            WHEN T5._from2 THEN [Microsoft.Samples.NLayerApp.");
            viewString.Append("Infrastructure.Data.MainModule.Model.Book](T5.Product_ProductId, T5.Product_Prod");
            viewString.Append("uctDescription, T5.Product_UnitPrice, T5.Product_UnitAmount, T5.Product_Publishe");
            viewString.Append("r, T5.Product_AmountInStock, T5.Book_Editor)\r\n            ELSE [Microsoft.Sample");
            viewString.Append("s.NLayerApp.Infrastructure.Data.MainModule.Model.Software](T5.Product_ProductId,");
            viewString.Append(" T5.Product_ProductDescription, T5.Product_UnitPrice, T5.Product_UnitAmount, T5.");
            viewString.Append("Product_Publisher, T5.Product_AmountInStock, T5.Software_LicenseCode)\r\n        E");
            viewString.Append("ND\r\n    FROM (\r\n        SELECT T1.Product_ProductId, T1.Product_ProductDescripti");
            viewString.Append("on, T1.Product_UnitPrice, T1.Product_UnitAmount, T1.Product_Publisher, T1.Produc");
            viewString.Append("t_AmountInStock, T4.Book_Editor, T4.Software_LicenseCode, T1._from0, (T4._from1 ");
            viewString.Append("AND T4._from1 IS NOT NULL) AS _from1, (T4._from2 AND T4._from2 IS NOT NULL) AS _");
            viewString.Append("from2\r\n        FROM  (\r\n            SELECT \r\n                T.ProductId AS Prod");
            viewString.Append("uct_ProductId, \r\n                T.ProductDescription AS Product_ProductDescript");
            viewString.Append("ion, \r\n                T.UnitPrice AS Product_UnitPrice, \r\n                T.Uni");
            viewString.Append("tAmount AS Product_UnitAmount, \r\n                T.Publisher AS Product_Publishe");
            viewString.Append("r, \r\n                T.AmountInStock AS Product_AmountInStock, \r\n               ");
            viewString.Append(" True AS _from0\r\n            FROM NLayerAppModelStoreContainer.Product AS T) AS ");
            viewString.Append("T1\r\n            LEFT OUTER JOIN ( (\r\n                SELECT \r\n                  ");
            viewString.Append("  T.ProductId AS Product_ProductId, \r\n                    CAST(NULL AS [Edm.Stri");
            viewString.Append("ng]) AS Book_Editor, \r\n                    T.LicenseCode AS Software_LicenseCode");
            viewString.Append(", \r\n                    True AS _from1, \r\n                    False AS _from2\r\n ");
            viewString.Append("               FROM NLayerAppModelStoreContainer.Software AS T)\r\n               ");
            viewString.Append(" UNION ALL (\r\n                SELECT \r\n                    T.ProductId AS Produc");
            viewString.Append("t_ProductId, \r\n                    T.Publisher AS Book_Editor, \r\n               ");
            viewString.Append("     CAST(NULL AS [Edm.String]) AS Software_LicenseCode, \r\n                    F");
            viewString.Append("alse AS _from1, \r\n                    True AS _from2\r\n                FROM NLaye");
            viewString.Append("rAppModelStoreContainer.Book AS T)) AS T4\r\n            ON T1.Product_ProductId =");
            viewString.Append(" T4.Product_ProductId\r\n    ) AS T5");
            return new System.Collections.Generic.KeyValuePair<string, string>("MainModuleUnitOfWork.Products", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for MainModuleUnitOfWork.CustomerPictures
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MainModuleUnitOfWork.CustomerPictures", @"
    SELECT VALUE -- Constructing CustomerPictures
        [Microsoft.Samples.NLayerApp.Infrastructure.Data.MainModule.Model.CustomerPicture](T1.CustomerPicture_CustomerId, T1.CustomerPicture_Photo)
    FROM (
        SELECT 
            T.CustomerId AS CustomerPicture_CustomerId, 
            T.Photo AS CustomerPicture_Photo, 
            True AS _from0
        FROM NLayerAppModelStoreContainer.Customer AS T
    ) AS T1");
        }
    }
}


