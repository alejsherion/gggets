<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GGGETSApp.Infrastructure.CrossCutting.IoC</name>
    </assembly>
    <members>
        <member name="T:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.IoCUnityContainer">
            <summary>
            Implemented container in Microsoft Practices Unity
            </summary>
        </member>
        <member name="T:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.IContainer">
            <summary>
            Base contract for locator and register dependencies
            </summary>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.IContainer.Resolve``1">
            <summary>
            Solve TService dependency
            </summary>
            <typeparam name="TService">Type of dependency</typeparam>
            <returns>instance of TService</returns>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.IContainer.Resolve(System.Type)">
            <summary>
            Solve type construction and return the object as a TService instance
            </summary>
            <returns>instance of this type</returns>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.IContainer.RegisterType(System.Type)">
            <summary>
            Register type into service locator
            </summary>
            <param name="type">Type to register</param>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.IoCUnityContainer.#ctor">
            <summary>
            Create a new instance of IoCUnitContainer
            </summary>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.IoCUnityContainer.ConfigureRootContainer(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Configure root container.Register types and life time managers for unity builder process
            </summary>
            <param name="container">Container to configure</param>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.IoCUnityContainer.ConfigureRealContainer(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Configure real container. Register types and life time managers for unity builder process
            </summary>
            <param name="container">Container to configure</param>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.IoCUnityContainer.ConfigureFakeContainer(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            Configure fake container.Register types and life time managers for unity builder process
            </summary>
            <param name="container">Container to configure</param>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.IoCUnityContainer.Resolve``1">
            <summary>
            <see cref="M:Microsoft.Samples.NLayerApp.Infrastructure.CrossCutting.IoC.IContainer.Resolve{TService}"/>
            </summary>
            <typeparam name="TService"><see cref="M:Microsoft.Samples.NLayerApp.Infrastructure.CrossCutting.IoC.IContainer.Resolve{TService}"/></typeparam>
            <returns><see cref="M:Microsoft.Samples.NLayerApp.Infrastructure.CrossCutting.IoC.IContainer.Resolve{TService}"/></returns>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.IoCUnityContainer.Resolve(System.Type)">
            <summary>
            <see cref="M:Microsoft.Samples.NLayerApp.Infrastructure.CrossCutting.IoC.IContainer.Resolve"/>
            </summary>
            <param name="type"><see cref="M:Microsoft.Samples.NLayerApp.Infrastructure.CrossCutting.IoC.IContainer.Resolve"/></param>
            <returns><see cref="M:Microsoft.Samples.NLayerApp.Infrastructure.CrossCutting.IoC.IContainer.Resolve"/></returns>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.IoCUnityContainer.RegisterType(System.Type)">
            <summary>
            <see cref="M:Microsoft.Samples.NLayerApp.Infrastructure.CrossCutting.IoC.IContainer.RegisterType"/>
            </summary>
            <param name="type"><see cref="M:Microsoft.Samples.NLayerApp.Infrastructure.CrossCutting.IoC.IContainer.RegisterType"/></param>
        </member>
        <member name="T:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.IoCFactory">
            <summary>
            IoCFactory  implementation 
            </summary>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.IoCFactory.#cctor">
            <summary>
            Only for singleton pattern, remove before field init IL anotation
            </summary>
        </member>
        <member name="P:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.IoCFactory.Instance">
            <summary>
            Get singleton instance of IoCFactory
            </summary>
        </member>
        <member name="P:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.IoCFactory.CurrentContainer">
            <summary>
            Get current configured IContainer
            <remarks>
            At this moment only IoCUnityContainer existss
            </remarks>
            </summary>
        </member>
        <member name="T:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Resources.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Resources.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Resources.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Resources.Messages.exception_ContainerNotFound">
            <summary>
              Looks up a localized string similar to Container not found in IoC configuration.
            </summary>
        </member>
        <member name="P:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Resources.Messages.exception_DefaultIOCSettings">
            <summary>
              Looks up a localized string similar to default IocContainer setting not found.
            </summary>
        </member>
        <member name="P:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Resources.Messages.exception_PerExecutionContextLifetimeManagerKeyCannotBeNull">
            <summary>
              Looks up a localized string similar to Key cannot be null in PerExecutionContextLifetimeManager.
            </summary>
        </member>
        <member name="T:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.LifetimeManagers.PerExecutionContextLifetimeManager">
            <summary>
            This is a custom lifetime that preserve  instance on the same
            execution environment. For example, in  a WCF request or ASP.NET request, diferent
            call to resolve method return the same instance
            </summary>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.LifetimeManagers.PerExecutionContextLifetimeManager.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.LifetimeManagers.PerExecutionContextLifetimeManager.#ctor(System.Guid)">
            <summary>
             Constructor
            </summary>
            <param name="key">A key for this lifetimemanager resolver</param>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.LifetimeManagers.PerExecutionContextLifetimeManager.GetValue">
            <summary>
            <see cref="M:Microsoft.Practices.Unity.LifetimeManager.GetValue"/>
            </summary>
            <returns><see cref="M:Microsoft.Practices.Unity.LifetimeManager.GetValue"/></returns>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.LifetimeManagers.PerExecutionContextLifetimeManager.RemoveValue">
            <summary>
            <see cref="M:Microsoft.Practices.Unity.LifetimeManager.RemoveValue"/>
            </summary>
        </member>
        <member name="M:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.LifetimeManagers.PerExecutionContextLifetimeManager.SetValue(System.Object)">
            <summary>
            <see cref="M:Microsoft.Practices.Unity.LifetimeManager.SetValue"/>
            </summary>
            <param name="newValue"><see cref="M:Microsoft.Practices.Unity.LifetimeManager.SetValue"/></param>
        </member>
        <member name="T:ETS.GGGETSApp.Infrastructure.CrossCutting.IoC.Unity.LifetimeManagers.PerExecutionContextLifetimeManager.ContainerExtension">
            <summary>
            Custom extension for OperationContext scope
            </summary>
        </member>
    </members>
</doc>
